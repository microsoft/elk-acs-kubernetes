{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "dnsNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Sets the Domain name prefix for the cluster.  The concatenation of the domain name and the regionalized DNS zone make up the fully qualified domain name associated with the public IP address."
      }
    },
    "agentCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of agents for the cluster.  This value can be from 1 to 100 (note, for Kubernetes clusters you will also get 1 or 2 public agents in addition to these seleted masters)"
      },
      "minValue": 1,
      "maxValue": 100
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A1_v2",
        "Standard_A2_v2",
        "Standard_A4_v2",
        "Standard_A8_v2",
        "Standard_A2m_v2",
        "Standard_A4m_v2",
        "Standard_A8m_v2",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_DS2",
        "Standard_DS3",
        "Standard_DS4",
        "Standard_DS11",
        "Standard_DS12",
        "Standard_DS13",
        "Standard_DS14",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5"
      ],
      "metadata": {
        "description": "The size of the Virtual Machine as agent."
      }
    },
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines."
      }
    },
    "masterCount": {
      "type": "int",
      "defaultValue": 1,
      "allowedValues": [
        1,
        3,
        5
      ],
      "metadata": {
        "description": "The number of Kubernetes masters for the cluster."
      }
    },
    "sshRSAPublicKey": {
      "type": "string",
      "metadata": {
        "description": "Configure all linux machines with the SSH RSA public key string.  Your key should include three parts, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
      }
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "Client ID (used by cloudprovider)"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password to login controller node"
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "16.04.0-LTS",
      "allowedValues": [
        "12.04.5-LTS",
        "14.04.5-LTS",
        "16.04.0-LTS"
      ],
      "metadata": {
        "description": "The Ubuntu version for the controller node. This will pick a fully patched image of this given Ubuntu version."
      }
    },
    "privateKey": {
      "type": "securestring",
      "metadata": {
        "description": "Base64 encoded private key corresbonding to the public key for ACS"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of all components"
      }
    },
    "registryUrl": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Custom registry(e.g. Docker Hub) url to be used"
      }
    },
    "storageAccountSku": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage account sku to be used as Elasticsearch data node"
      }
    },
    "baseTemplateUrl": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Microsoft/elk-acs-kubernetes/rc/",
      "metadata": {
        "description": "Base URL of templates, typically a repository for configuraions"
      }
    },
    "archiveUrl": {
      "type": "string",
      "defaultValue": "https://github.com/Microsoft/elk-acs-kubernetes/archive/rc.zip",
      "metadata": {
        "description": "Archive URL of all contents."
      }
    },
    "directoryName": {
      "type": "string",
      "defaultValue": "elk-acs-kubernetes-rc/",
      "metadata": {
        "description": "Directory in archive."
      }
    },
    "authenticationMode": {
      "type": "string",
      "defaultValue": "BasicAuth",
      "allowedValues": [
        "BasicAuth",
        "AzureAD"
      ],
      "metadata": {
        "description": "User authentication mode."
      }
    },
    "azureAdClientId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure AD client ID(Application ID)"
      }
    },
    "azureAdClientSecret": {
      "type": "securestring",
      "defaultValue": "",
      "metadata": {
        "description": "Azure AD client secret/key"
      }
    },
    "tenant": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Azure AD tenant(e.g. contoso.onmicrosoft.com)"
      }
    }
  },
  "variables": {
    "adminUsername": "[parameters('linuxAdminUsername')]",
    "agentCount": "[parameters('agentCount')]",
    "agentsEndpointDNSNamePrefix": "[concat(parameters('dnsNamePrefix'), 'agents')]",
    "agentVMSize": "[parameters('agentVMSize')]",
    "masterCount": "[parameters('masterCount')]",
    "mastersEndpointDNSNamePrefix": "[concat(parameters('dnsNamePrefix'), 'master')]",
    "orchestratorType": "Kubernetes",
    "sshRSAPublicKey": "[parameters('sshRSAPublicKey')]",
    "servicePrincipalClientId": "[parameters('servicePrincipalClientId')]",
    "servicePrincipalClientSecret": "[parameters('servicePrincipalClientSecret')]",
    "controllerDNSNamePrefix": "[concat(parameters('dnsNamePrefix'), 'control')]",
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'ctl')]",
    "frontEndNSGName": "[concat(uniquestring(resourceGroup().id), 'frontEndNSG')]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "nicName": "controllernic",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "controllerip",
    "publicIPAddressType": "Dynamic",
    "vmName": "controllervm",
    "vmSize": "Standard_A1",
    "virtualNetworkName": "controller-vnet",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "dataStorageAccountName": "[concat(uniquestring(resourceGroup().id), 'data')]",
    "registryName": "[concat(uniquestring(resourceGroup().id), 'registry')]",
    "registryDisk": "[concat(uniquestring(resourceGroup().id), 'elkimage')]",
    "basedPrivateKey": "[parameters('privateKey')]",
    "baseUrl": "[concat(parameters('baseTemplateUrl'), '/ARM-template/components/')]",
    "registryTemplates": {
      "True": "containerRegistry.json",
      "False": "emptyTemplate.json"
    },
    "actualTemplate": "[concat(variables('baseUrl'), variables('registryTemplates')[string(empty(parameters('registryUrl')))])]"
  },
  "resources": [
    {
      "apiVersion": "2016-09-01",
      "name": "containerService",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('baseUrl'), 'containerService.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "dnsNamePrefix": {
            "value": "[parameters('dnsNamePrefix')]"
          },
          "agentCount": {
            "value": "[parameters('agentCount')]"
          },
          "agentVMSize": {
            "value": "[parameters('agentVMSize')]"
          },
          "linuxAdminUsername": {
            "value": "[parameters('linuxAdminUsername')]"
          },
          "masterCount": {
            "value": "[parameters('masterCount')]"
          },
          "sshRSAPublicKey": {
            "value": "[parameters('sshRSAPublicKey')]"
          },
          "servicePrincipalClientId": {
            "value": "[parameters('servicePrincipalClientId')]"
          },
          "servicePrincipalClientSecret": {
            "value": "[parameters('servicePrincipalClientSecret')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "storageAccount",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('baseUrl'), 'storageAccount.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountSku": {
            "value": "[parameters('storageAccountSku')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "containerRegistry",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('actualTemplate')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          }
        }
      }
    },
    {
      "apiVersion": "2016-09-01",
      "name": "controllerNode",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments/', 'containerService')]",
        "[resourceId('Microsoft.Resources/deployments/', 'storageAccount')]",
        "[resourceId('Microsoft.Resources/deployments/', 'containerRegistry')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('baseUrl'), 'controllerNode.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "dnsNamePrefix": {
            "value": "[parameters('dnsNamePrefix')]"
          },
          "linuxAdminUsername": {
            "value": "[parameters('linuxAdminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "ubuntuOSVersion": {
            "value": "[parameters('ubuntuOSVersion')]"
          },
          "privateKey": {
            "value": "[parameters('privateKey')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "registryUrl": {
            "value": "[parameters('registryUrl')]"
          },
          "baseTemplateUrl": {
            "value": "[parameters('baseTemplateUrl')]"
          },
          "storageAccountSku": {
            "value": "[parameters('storageAccountSku')]"
          },
          "archiveUrl": {
            "value": "[parameters('archiveUrl')]"
          },
          "directoryName": {
            "value": "[parameters('directoryName')]"
          },
          "authenticationMode": {
            "value": "[parameters('authenticationMode')]"
          },
          "azureAdClientId": {
            "value": "[parameters('azureAdClientId')]"
          },
          "azureAdClientSecret": {
            "value": "[parameters('azureAdClientSecret')]"
          },
          "tenant": {
            "value": "[parameters('tenant')]" 
          }
        }
      }
    }
  ],
  "outputs": {
    "hostname": {
      "type": "string",
      "value": "[reference('controllerNode').outputs.hostname.value]"
    },
    "sshCommand": {
      "type": "string",
      "value": "[reference('controllerNode').outputs.sshCommand.value]"
    }
  }
}